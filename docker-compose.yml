version: '3.9'

services:
  web:
    build: .
    container_name: backend_banister
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - minio
      - redis
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`localhost`) && PathPrefix(`/api`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  db:
    image: postgres:15
    container_name: postgres_banister
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  minio:
    image: minio/minio:latest
    container_name: minio_banister
    command: server /data --console-address ":9001"
    env_file:
      - .env
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`localhost`) && PathPrefix(`/minio`)"
      - "traefik.http.services.minio.loadbalancer.server.port=9000"

  traefik:
    image: traefik:v2.10
    container_name: traefik_banister
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"

  redis:
    image: redis:7-alpine
    container_name: redis_banister
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  celery:
    build: .
    container_name: celery_banister
    command: celery -A banister_backend worker -l info -Q email,notifications,workers
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0

  celery-beat:
    build: .
    container_name: celery_beat_banister
    command: celery -A banister_backend beat -l info
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_banister
    env_file:
      - .env
    ports:
      - "5050:80"
    depends_on:
      - db

volumes:
  postgres_data:
  minio_data:
  redis_data: