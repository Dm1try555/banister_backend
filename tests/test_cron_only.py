#!/usr/bin/env python3
import sys
import os
sys.path.append('/app')

def test_celery_beat_schedule():
    print("‚è∞ –¢–ï–°–¢ –†–ê–°–ü–ò–°–ê–ù–ò–Ø CRON –ó–ê–î–ê–ß")
    
    try:
        from banister_backend.celery import app
        
        schedule = app.conf.beat_schedule
        
        expected_tasks = {
            'database-backup': '–∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ –ø–æ–ª–Ω–æ—á—å',
            'minio-backup': '–∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ –ø–æ–ª–Ω–æ—á—å', 
            'cleanup-old-notifications': '–∫–∞–∂–¥–æ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ –ø–æ–ª–Ω–æ—á—å'
        }
        
        for task_name, description in expected_tasks.items():
            if task_name in schedule:
                task_info = schedule[task_name]
                print(f"‚úÖ {task_name}: {description}")
                print(f"   Task: {task_info['task']}")
                print(f"   Schedule: {task_info['schedule']}")
            else:
                print(f"‚ùå {task_name}: –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è: {e}")

def test_cleanup_notifications():
    print("\nüóëÔ∏è –¢–ï–°–¢ –û–ß–ò–°–¢–ö–ò –£–í–ï–î–û–ú–õ–ï–ù–ò–ô")
    
    try:
        from core.backup.local_service import local_backup_service
        deleted_count = local_backup_service.cleanup_old_notifications()
        print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {deleted_count} —Å—Ç–∞—Ä—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (—Å—Ç–∞—Ä—à–µ 2 –º–µ—Å—è—Ü–µ–≤)")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")

if __name__ == "__main__":
    test_celery_beat_schedule()
    test_cleanup_notifications()