
import requests
import io

BASE_URL = "http://localhost:8000/api/v1"

def get_admin_token():
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∞"""
    url = f"{BASE_URL}/auth/login/"
    data = {
        "username": "testadmin",
        "password": "admin123"
    }
    response = requests.post(url, json=data)
    if response.status_code == 200:
        return response.json()['tokens']['access']
    return None

def test_pagination():
    """–¢–µ—Å—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    token = get_admin_token()
    if not token:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∞")
        return
    
    headers = {"Authorization": f"Bearer {token}"}
    
    # –¢–µ—Å—Ç —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    url = f"{BASE_URL}/users/?page=1&page_size=3"
    response = requests.get(url, headers=headers)
    
    print(f"üìÑ –ü–ê–ì–ò–ù–ê–¶–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô: {response.status_code}")
    if response.status_code == 200:
        result = response.json()
        print(f"‚úÖ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: {result['count']}")
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {len(result['results'])}")
        print(f"‚úÖ –°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {'–î–∞' if result['next'] else '–ù–µ—Ç'}")
        print(f"‚úÖ –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {'–î–∞' if result['previous'] else '–ù–µ—Ç'}")
        
        if result['results']:
            user = result['results'][0]
            print(f"‚úÖ –ü–µ—Ä–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user['username']}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")

def test_upload_profile_photo():
    """–¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏"""
    token = get_admin_token()
    if not token:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∞")
        return
    
    headers = {"Authorization": f"Bearer {token}"}
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–µ–π–∫–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    fake_image = io.BytesIO()
    fake_image.write(b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x01\x00\x00\x00\x01\x08\x02\x00\x00\x00\x90wS\xde\x00\x00\x00\x0cIDATx\x9cc\xf8\x00\x00\x00\x01\x00\x01\x00\x00\x00\x00\x1b[\x1d\x00\x00\x00\x00IEND\xaeB`\x82')
    fake_image.seek(0)
    
    url = f"{BASE_URL}/auth/upload-photo/"
    files = {"photo": ("test.png", fake_image, "image/png")}
    
    response = requests.post(url, files=files, headers=headers)
    
    print(f"üì∏ –ó–ê–ì–†–£–ó–ö–ê –§–û–¢–û: {response.status_code}")
    if response.status_code == 200:
        result = response.json()
        print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ: {result['message']}")
        print(f"‚úÖ URL —Ñ–æ—Ç–æ: {result['photo_url'][:50]}...")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")

def test_upload_invalid_file():
    """–¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞"""
    token = get_admin_token()
    if not token:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∞")
        return
    
    headers = {"Authorization": f"Bearer {token}"}
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –≤–º–µ—Å—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    fake_file = io.BytesIO(b"This is not an image")
    
    url = f"{BASE_URL}/auth/upload-photo/"
    files = {"photo": ("test.txt", fake_file, "text/plain")}
    
    response = requests.post(url, files=files, headers=headers)
    
    print(f"üö´ –ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–ô –§–ê–ô–õ: {response.status_code}")
    if response.status_code == 400:
        print("‚úÖ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω")
    else:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: {response.text}")

def test_no_photo_upload():
    """–¢–µ—Å—Ç –±–µ–∑ —Ñ–∞–π–ª–∞"""
    token = get_admin_token()
    if not token:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∞")
        return
    
    headers = {"Authorization": f"Bearer {token}"}
    
    url = f"{BASE_URL}/auth/upload-photo/"
    response = requests.post(url, headers=headers)
    
    print(f"üì≠ –ë–ï–ó –§–ê–ô–õ–ê: {response.status_code}")
    if response.status_code == 400:
        print("‚úÖ –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Ñ–∞–π–ª–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
    else:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: {response.text}")

if __name__ == "__main__":
    print("üîÑ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–ê–ì–ò–ù–ê–¶–ò–ò –ò MINIO\n")
    
    # –¢–µ—Å—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    test_pagination()
    print()
    
    # –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ
    test_upload_profile_photo()
    print()
    
    # –¢–µ—Å—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    test_upload_invalid_file()
    print()
    
    # –¢–µ—Å—Ç –±–µ–∑ —Ñ–∞–π–ª–∞
    test_no_photo_upload()
    print()
    
    print("üéØ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–ê–ì–ò–ù–ê–¶–ò–ò –ò MINIO –ó–ê–í–ï–†–®–ï–ù–û")