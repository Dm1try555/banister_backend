
import requests
import json

BASE_URL = "http://localhost:8000/api/v1"

def get_admin_token():
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞"""
    url = f"{BASE_URL}/auth/login/"
    data = {
        "username": "testadmin",
        "password": "admin123"
    }
    response = requests.post(url, json=data)
    if response.status_code == 200:
        return response.json()['tokens']['access']
    return None

def create_regular_admin():
    """–°–æ–∑–¥–∞—Ç—å –æ–±—ã—á–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞"""
    import random
    admin_id = random.randint(1000, 9999)
    url = f"{BASE_URL}/auth/register/"
    data = {
        "username": f"regularadmin{admin_id}",
        "first_name": "Regular", 
        "last_name": "Admin",
        "email": f"admin{admin_id}@regular.com",
        "password": "admin123",
        "password_confirm": "admin123",
        "role": "admin",
        "location": "Office"
    }
    
    response = requests.post(url, json=data)
    print(f"üë§ –°–û–ó–î–ê–ù–ò–ï –û–ë–´–ß–ù–û–ì–û –ê–î–ú–ò–ù–ê: {response.status_code}")
    if response.status_code == 201:
        result = response.json()
        print(f"‚úÖ –ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω: {result['user']['username']} ({result['user']['role']})")
        return result['user']['id']
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
        return None

def test_manage_permissions(token, admin_id):
    """–¢–µ—Å—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏"""
    url = f"{BASE_URL}/auth/admin/manage-permissions/"
    headers = {"Authorization": f"Bearer {token}"}
    
    data = {
        "admin_id": admin_id,
        "permission_name": "users_management", 
        "can_access": True
    }
    
    response = requests.post(url, json=data, headers=headers)
    print(f"üîê –í–´–î–ê–ß–ê –†–ê–ó–†–ï–®–ï–ù–ò–Ø: {response.status_code}")
    if response.status_code == 200:
        result = response.json()
        print(f"‚úÖ {result['message']}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
    
    data['can_access'] = False
    response = requests.post(url, json=data, headers=headers)
    print(f"üö´ –û–¢–ó–´–í –†–ê–ó–†–ï–®–ï–ù–ò–Ø: {response.status_code}")
    if response.status_code == 200:
        result = response.json()
        print(f"‚úÖ {result['message']}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")

def test_email_verification():
    """–¢–µ—Å—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ email"""
    url = f"{BASE_URL}/auth/send-verification/"
    data = {"email": "admin@regular.com"}
    
    response = requests.post(url, json=data)
    print(f"üìß –û–¢–ü–†–ê–í–ö–ê –ö–û–î–ê –í–ï–†–ò–§–ò–ö–ê–¶–ò–ò: {response.status_code}")
    if response.status_code == 200:
        print("‚úÖ –ö–æ–¥ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
    
    url = f"{BASE_URL}/auth/verify-email/"
    data = {
        "email": "admin@regular.com",
        "code": "123456"
    }
    
    response = requests.post(url, json=data)
    print(f"üîç –í–ï–†–ò–§–ò–ö–ê–¶–ò–Ø EMAIL: {response.status_code}")
    if response.status_code == 400:
        print("‚úÖ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–¥ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω")
    else:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: {response.text}")

if __name__ == "__main__":
    print("üîë –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –†–ê–ó–†–ï–®–ï–ù–ò–ô\n")
    
    token = get_admin_token()
    if not token:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞")
        exit()
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—ã—á–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞
    admin_id = create_regular_admin()
    print()
    
    if admin_id:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏
        test_manage_permissions(token, admin_id)
        print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º email –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é
    test_email_verification()
    print()
    
    print("üéØ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –†–ê–ó–†–ï–®–ï–ù–ò–ô –ó–ê–í–ï–†–®–ï–ù–û")